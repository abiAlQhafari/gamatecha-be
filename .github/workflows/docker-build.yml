  name: Docker Build and Push

  on:
    push:
      tags:
        - '*'
      branches:
        - dev
        - staging
        - main

  jobs:
    build:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Log in to GitHub Container Registry
          run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        - name: Build Docker image
          run: |
            ORGANIZATION=abialqhafari
            REPOSITORY=gamatecha-be
            IMAGE_NAME=ghcr.io/${ORGANIZATION}/${REPOSITORY}
            # Tentukan tag berdasarkan branch yang digunakan
            if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
              TAG_NAME="dev"
            elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
              TAG_NAME="staging"
            elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              TAG_NAME="latest"
            else
              TAG_NAME=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')
            fi
            echo "Building Docker image: $IMAGE_NAME:${TAG_NAME}"
            docker build . -t $IMAGE_NAME:${TAG_NAME}
        - name: Push Docker image with version tag
          run: |
            ORGANIZATION=abialqhafari
            REPOSITORY=gamatecha-be
            IMAGE_NAME=ghcr.io/${ORGANIZATION}/${REPOSITORY}
            # Tentukan tag berdasarkan branch yang digunakan
            if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
              TAG_NAME="dev"
            elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
              TAG_NAME="staging"
            elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              TAG_NAME="latest"
            else
              TAG_NAME=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')
            fi
            echo "Pushing Docker image with tag: ${TAG_NAME}"
            docker push $IMAGE_NAME:${TAG_NAME}

    deploy:
      needs: build  # Hanya jalan setelah build selesai
      runs-on: ubuntu-latest

      steps:
        - name: Deploy via SSH
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SERVER_IP }}
            username: ${{ secrets.SERVER_USER }}
            password: ${{ secrets.SERVER_PASSWORD }}
            script: |
              ORGANIZATION=abialqhafari
              REPOSITORY=gamatecha-be
              IMAGE_NAME=ghcr.io/${ORGANIZATION}/${REPOSITORY}
              TAG_NAME="dev"
              ENV_FILE="/root/gamatecha-be/.env"

              echo "Pulling latest Docker image..."
              docker pull $IMAGE_NAME:${TAG_NAME}

              echo "Stopping old container..."
              docker stop gamatecha-be || true
              docker rm gamatecha-be || true

              docker run -d \
                --name gamatecha-be \
                -p 3001:3001 \
                --restart always \
                --env-file $ENV_FILE \
                --network bridge \
                $IMAGE_NAME:${TAG_NAME}

              # Add verification steps
              echo "Verifying container status..."
              docker ps | grep gamatecha-be
              echo "Checking container logs..."
              docker logs gamatecha-be

              # Delete unused images
              docker rmi -f $(docker image ls -q -f "dangling=true")